"use strict";(self.webpackChunkVRChat_Creator_Docs=self.webpackChunkVRChat_Creator_Docs||[]).push([[1189],{84560:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>u,contentTitle:()=>o,default:()=>d,frontMatter:()=>t,metadata:()=>a,toc:()=>l});var r=n(74848),i=n(28453);const t={},o="Physbones",a={id:"avatars/avatar-dynamics/physbones",title:"Physbones",description:"PhysBones est un ensemble de composants qui vous permet d'ajouter des mouvements secondaires aux avatars, vous permettant d'ajouter des mouvements sur des \xe9l\xe9ments comme les cheveux, la queue, les oreilles, les habits, et bien plus encore ! Les utiliser correctement rendra votre avatar plus dynamique et vivant.",source:"@site/i18n/fr/docusaurus-plugin-content-docs/current/avatars/avatar-dynamics/physbones.md",sourceDirName:"avatars/avatar-dynamics",slug:"/avatars/avatar-dynamics/physbones",permalink:"/creator-docs-i18n/fr/avatars/avatar-dynamics/physbones",draft:!1,unlisted:!1,editUrl:"https://github.com/FairplexVR/creator-docs/edit/main/Docs/i18n/fr/docusaurus-plugin-content-docs/current/avatars/avatar-dynamics/physbones.md",tags:[],version:"current",lastUpdatedBy:"Fairplex",lastUpdatedAt:1713821692,formattedLastUpdatedAt:"22 avr. 2024",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"D\xe9boguer les Avatar Dynamics",permalink:"/creator-docs-i18n/fr/avatars/avatar-dynamics/debugging-avatar-dynamics"},next:{title:"Animator Parameters",permalink:"/creator-docs-i18n/fr/avatars/animator-parameters"}},u={},l=[{value:"VRCPhysBone",id:"vrcphysbone",level:2},{value:"Versions",id:"versions",level:3},{value:"Transforms",id:"transforms",level:3},{value:"Forces",id:"forces",level:3}];function c(e){const s={admonition:"admonition",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.h1,{id:"physbones",children:"Physbones"}),"\n",(0,r.jsx)(s.p,{children:"PhysBones est un ensemble de composants qui vous permet d'ajouter des mouvements secondaires aux avatars, vous permettant d'ajouter des mouvements sur des \xe9l\xe9ments comme les cheveux, la queue, les oreilles, les habits, et bien plus encore ! Les utiliser correctement rendra votre avatar plus dynamique et vivant."}),"\n",(0,r.jsx)(s.p,{children:"Les PhysBones sont un remplacement des Dynamic Bones. Bien que les deux syst\xe8mes partagent beaucoup de points communs, il y a quelques diff\xe9rences majeures avec les PhysBones, de telle sorte que les avatars ne pourront pas tous \xeatre convertis sur le syst\xe8me de VRChat."}),"\n",(0,r.jsxs)(s.p,{children:["Un exemple de comment utiliser Avatar Dynamics peut \xeatre trouv\xe9 dans le SDK sous ",(0,r.jsx)(s.code,{children:"Packages > VRChat SDK - Avatars > Samples > Dynamics > Robot Avatar"}),"."]}),"\n",(0,r.jsx)(s.h2,{id:"vrcphysbone",children:"VRCPhysBone"}),"\n",(0,r.jsx)(s.p,{children:"D\xe9fini une cha\xeene d'os \xe0 animer gr\xe2ce aux PhysBones. Ceux-ci peuvent \xeatre utilis\xe9s pour simuler un corps souple et un mouvement secondaire, comme des cheveux, des queues, des oreilles souples, et bien plus ! Il contient plusieurs options de configuration, et peut \xeatre configur\xe9 de plusieurs mani\xe8res."}),"\n",(0,r.jsx)(s.p,{children:'De plus, les PhysBones peuvent interagir avec vous et d\'autres personnes ! Si vous avez donn\xe9 la permission aux autres utilisateurs, ils pourront saisir les PhysBones configur\xe9s sur votre avatar, appuyer sur la g\xe2chette tout en maintenant le PhysBone pour le "Poser" et maintenir sa position. Vous pouvez aussi d\xe9sactiver ceci lors de la configuration afin de ne pas autoriser la pose, ne pas autoriser la saisie, ou ne pas autoriser les collisions tout court.'}),"\n",(0,r.jsx)(s.p,{children:"Bien qu'ils n'ont pas \xe9t\xe9 pr\xe9vus pour, les PhysBones servent \xe9galement de substituts raisonnables pour les v\xeatements, jusqu'\xe0 ce que nous impl\xe9mentions notre propre composant Cloth."}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.img,{src:n(81448).A+"",width:"626",height:"802"})}),"\n",(0,r.jsx)(s.h3,{id:"versions",children:"Versions"}),"\n",(0,r.jsx)(s.p,{children:"Vous pouvez \xe0 pr\xe9sent s\xe9lectionner la version du composant VRCPhysBone que vous souhaitez utiliser, directement dans ce dernier. Par d\xe9faut, la derni\xe8re version sera choisie \xe0 la cr\xe9ation d'un nouveau composant. Les avatars existants continueront d'utiliser leur ancienne version, \xe0 moins d'\xeatre manuellement mis \xe0 jour et \xe0 nouveau mis en ligne."}),"\n",(0,r.jsx)(s.p,{children:"Version 1.0:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"La version de base du composant VRCPhysBone."}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:"Version 1.1:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"Mise \xe0 jour des Os compressibles, permettant aux os de s'\xe9craser et d'affecter leur longueur par mouvement."}),"\n",(0,r.jsx)(s.li,{children:"La gravit\xe9 agit maintenant comme un ratio de degr\xe9 pour la rotation des os en repos. Une valeur d'attraction positive est requise pour que les os puissent bouger dans la direction de la gravit\xe9."}),"\n",(0,r.jsx)(s.li,{children:"La rigidit\xe9 agit maintenant comme un ratio qui garde un os dans son orientation pr\xe9c\xe9dente."}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"transforms",children:"Transforms"}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"Root Transform"})," - Le Transform o\xf9 ce composant s'amorce. Si laiss\xe9 vide, nous supposons que l'on d\xe9marre depuis ce GameObject.",(0,r.jsx)(s.br,{}),"\n",(0,r.jsx)(s.code,{children:"Ignore Transforms"})," - Liste de Transforms ignor\xe9s, qui ne doivent pas \xeatre affect\xe9s par ce composant. Les Transforms ignor\xe9s comprennent automatiquement tous les enfants de ce Transform.",(0,r.jsx)(s.br,{}),"\n",(0,r.jsx)(s.code,{children:"Endpoint Position"})," - Vecteur utilis\xe9 pour cr\xe9er des os suppl\xe9mentaires \xe0 chaque extr\xe9mit\xe9 de la cha\xeene. Utilis\xe9 uniquement si la valeur est diff\xe9rente de z\xe9ro. G\xe9n\xe9ralement, vous voudrez augmenter ce dernier le long de l'axe +Y, qui pointe \"vers le haut\" de l'os.",(0,r.jsx)(s.br,{}),"\n",(0,r.jsx)(s.code,{children:"Multi-Child Type"})," - Comportement de l'os racine lorsque plusieurs cha\xeenes d'os existent. Celui-ci poss\xe8de trois modes :"]}),"\n",(0,r.jsxs)(s.p,{children:["Si d\xe9fini sur ",(0,r.jsx)(s.strong,{children:"Ignore"}),", l'os racine ne bougera pas, et ignorera la physique. Utile pour des \xe9l\xe9ments tels que les cheveux, car vous pouvez utiliser seulement un composant PhysBone \xe0 la racine pour affecter tous les os des cheveux !"]}),"\n",(0,r.jsxs)(s.p,{children:["Si d\xe9fini sur ",(0,r.jsx)(s.strong,{children:"First"}),", l'os racine va former une cha\xeene continue avec le premier os de la cha\xeene dans la hi\xe9rarchie. Toutes les autres cha\xeenes continueront de fonctionner, mais elles commenceront \xe0 partir du premier os dans chaque cha\xeene respectives au lieu de la racine comme la premi\xe8re cha\xeene."]}),"\n",(0,r.jsxs)(s.p,{children:["Si d\xe9fini sur ",(0,r.jsx)(s.strong,{children:"Average"}),", le mouvement de l'os racine sera la moyenne de toutes les autres cha\xeenes. Cela signifie que la base de chaque cha\xeene pourra bouger."]}),"\n",(0,r.jsxs)(s.admonition,{type:"caution",children:[(0,r.jsxs)(s.p,{children:["Si vous utilisez un seul os racine, ou un seul os racine avec plusieurs enfants (mais pas des petits-enfants), vous ",(0,r.jsx)(s.strong,{children:"devez"})," d\xe9finir une position de fin !"]}),(0,r.jsxs)(s.p,{children:["Par exemple, si vous placer le composant PhysBone sur n'importe quel ",(0,r.jsx)(s.code,{children:"RootBone"})," ci-dessous, vous ",(0,r.jsx)(s.strong,{children:"devez"})," d\xe9finir un ",(0,r.jsx)(s.strong,{children:"Endpoint Position"})," pour que les PhysBones puissent fonctionner. C'est diff\xe9rent des Dynamic > Bones !"]}),(0,r.jsx)(s.p,{children:"Os Unique"}),(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"RootBone"})}),"\n"]}),(0,r.jsx)(s.p,{children:"Enfants multiples, Racine unique"}),(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"RootBone"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"ChildBone1"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"ChildBone2"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"ChildBone3"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"ChildBone4"})}),"\n"]}),(0,r.jsxs)(s.p,{children:['Vous pouvez aussi adresser ceci en ajoutant des "end bones" apr\xe8s chaque ',(0,r.jsx)(s.code,{children:"ChildBone"}),", mais cela induit d'\xe9diter l'armature."]})]}),"\n",(0,r.jsx)(s.h3,{id:"forces",children:"Forces"}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Integration Type"})," d\xe9finit le type de math\xe9matiques utilis\xe9 pour simuler le mouvement de n'importe quel transform affect\xe9 par ce composant. Selon lequel choisi, vos options disponibles dans les sections Force cont changer. Vous pouvez choisir entre ces deux :"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"Simplified"})," est une m\xe9thode plus stable qui semble un peu plus lente et moins r\xe9active vis-\xe0-vis d'impulsions et de forces externes, mais moins faciles \xe0 configurer."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"Advanced"})," est moins stable, mais autorise des configurations plus complexes, et tend \xe0 \xeatre plus r\xe9active aux impulsions et aux forces externes.",(0,r.jsx)(s.br,{}),"\n","Avec les param\xe8tres par d\xe9faut, chacun de ces modes agit de mani\xe8re similaire, mais en ajustant les param\xe8tres et en les testant, cela r\xe9v\xe9lera rapidement leurs diff\xe9rences."]}),"\n"]})]})}function d(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},81448:(e,s,n)=>{n.d(s,{A:()=>r});const r=n.p+"assets/images/physbones-ca9ee06-2022-05-04_18-23-09_Unity-b5504c435b24026584dcf8bd452e79ec.png"},28453:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>a});var r=n(96540);const i={},t=r.createContext(i);function o(e){const s=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(t.Provider,{value:s},e.children)}}}]);