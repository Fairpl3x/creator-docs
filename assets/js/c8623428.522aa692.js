"use strict";(self.webpackChunkVRChat_Creator_Docs=self.webpackChunkVRChat_Creator_Docs||[]).push([[1729],{97356:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>h,frontMatter:()=>n,metadata:()=>s,toc:()=>d});var a=r(74848),l=r(28453);const n={title:"Getting Players",slug:"getting-players",hidden:!1,createdAt:"2021-01-22T01:48:13.564Z",updatedAt:"2021-11-12T01:23:15.713Z"},i=void 0,s={id:"worlds/udon/players/getting-players",title:"Getting Players",description:"These nodes are useful for getting an individual Player, a group of them, or all of them.",source:"@site/i18n/fr/docusaurus-plugin-content-docs/current/worlds/udon/players/getting-players.md",sourceDirName:"worlds/udon/players",slug:"/worlds/udon/players/getting-players",permalink:"/creator-docs-i18n/worlds/udon/players/getting-players",draft:!1,unlisted:!1,editUrl:"https://github.com/FairplexVR/creator-docs/edit/main/Docs/i18n/fr/docusaurus-plugin-content-docs/current/worlds/udon/players/getting-players.md",tags:[],version:"current",lastUpdatedBy:"Fairplex",lastUpdatedAt:1713821391,formattedLastUpdatedAt:"22 avr. 2024",frontMatter:{title:"Getting Players",slug:"getting-players",hidden:!1,createdAt:"2021-01-22T01:48:13.564Z",updatedAt:"2021-11-12T01:23:15.713Z"},sidebar:"tutorialSidebar",previous:{title:"Player API",permalink:"/creator-docs-i18n/worlds/udon/players/"},next:{title:"Player Audio",permalink:"/creator-docs-i18n/worlds/udon/players/player-audio"}},o={},d=[{value:"Networking.get LocalPlayer",id:"networkingget-localplayer",level:3},{value:"GetPlayerCount",id:"getplayercount",level:3},{value:"GetPlayers",id:"getplayers",level:3},{value:"GetPlayerById",id:"getplayerbyid",level:3},{value:"get playerId",id:"get-playerid",level:3},{value:"GetPlayerId",id:"getplayerid",level:3},{value:"Player Tag System",id:"player-tag-system",level:2},{value:"SetPlayerTag / GetPlayerTag",id:"setplayertag--getplayertag",level:3},{value:"ClearPlayerTags",id:"clearplayertags",level:3},{value:"GetPlayersWithTag",id:"getplayerswithtag",level:3}];function c(e){const t={admonition:"admonition",em:"em",h2:"h2",h3:"h3",img:"img",p:"p",...(0,l.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.p,{children:"These nodes are useful for getting an individual Player, a group of them, or all of them."}),"\n",(0,a.jsx)(t.h3,{id:"networkingget-localplayer",children:"Networking.get LocalPlayer"}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.em,{children:"VRCPlayerApi"})}),"\n",(0,a.jsx)(t.admonition,{type:"note",children:(0,a.jsx)(t.p,{children:"Please note that this function is a member of the Networking class, but it is being included here."})}),"\n",(0,a.jsxs)(t.p,{children:["The local player is the Player that this Udon script is currently running on-- alternately, the local player is ",(0,a.jsx)(t.em,{children:"you"}),". It's very important to know yourself!"]}),"\n",(0,a.jsx)(t.h3,{id:"getplayercount",children:"GetPlayerCount"}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.em,{children:"int"})}),"\n",(0,a.jsx)(t.p,{children:"Gets the actual number of Players in the instance when it is called."}),"\n",(0,a.jsx)(t.h3,{id:"getplayers",children:"GetPlayers"}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.em,{children:"VRCPlayerApi[]"})}),"\n",(0,a.jsxs)(t.p,{children:["This is how you get all the Players in your world so you can go through them in a For Loop and apply settings, make changes, look for a particular name, etc. To use it, you ",(0,a.jsx)(t.em,{children:"first need to create a VRCPlayerApi Array"}),"."]}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.img,{alt:"The bare minimum for a working call to GetPlayers. A better approach would be to construct VRCPlayerApi[] as a variable so you can reuse it.",src:r(84378).A+"",width:"1027",height:"187"})}),"\n",(0,a.jsx)(t.p,{children:"Above, you can see the bare minimum for a working call to GetPlayers. A better approach would be to construct VRCPlayerApi[] as a variable so you can reuse it."}),"\n",(0,a.jsx)(t.h3,{id:"getplayerbyid",children:"GetPlayerById"}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.em,{children:"int"})}),"\n",(0,a.jsx)(t.p,{children:"Get a VRCPlayerApi object for the given player Id if it exists."}),"\n",(0,a.jsx)(t.h3,{id:"get-playerid",children:"get playerId"}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.em,{children:"int"})}),"\n",(0,a.jsx)(t.p,{children:"Get the cached PlayerId, calls GetPlayerId if it hasn't been cached yet."}),"\n",(0,a.jsx)(t.h3,{id:"getplayerid",children:"GetPlayerId"}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.em,{children:"int"})}),"\n",(0,a.jsx)(t.p,{children:"Gets the Player's Network Id from the source."}),"\n",(0,a.jsx)(t.h2,{id:"player-tag-system",children:"Player Tag System"}),"\n",(0,a.jsx)(t.p,{children:"This system is a quick-and-dirty way of assigning strings to players without creating your own variables and collections."}),"\n",(0,a.jsx)(t.h3,{id:"setplayertag--getplayertag",children:"SetPlayerTag / GetPlayerTag"}),"\n",(0,a.jsxs)(t.p,{children:["Set: ",(0,a.jsx)(t.em,{children:"string, string"})]}),"\n",(0,a.jsxs)(t.p,{children:["Get: ",(0,a.jsx)(t.em,{children:"string"})]}),"\n",(0,a.jsx)(t.p,{children:'Sets a string variable that you can look up later. For example, you could set the "role" of a player in a cooking game to "chef" or "customer". Then you could GetPlayerTag for "role" and get back either "chef" or "customer".'}),"\n",(0,a.jsx)(t.h3,{id:"clearplayertags",children:"ClearPlayerTags"}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.em,{children:"VRCPlayerApi"})}),"\n",(0,a.jsx)(t.p,{children:"Remove all tags that you've set on a Player."}),"\n",(0,a.jsx)(t.h3,{id:"getplayerswithtag",children:"GetPlayersWithTag"}),"\n",(0,a.jsxs)(t.admonition,{type:"caution",children:[(0,a.jsx)(t.p,{children:"Not currently working. Returns a List, which is unavailable in Udon."}),(0,a.jsx)(t.p,{children:"You will be able to pass in an array of VRCPlayerApi objects and a tag and the method will fill the array with Players who have that tag set."})]})]})}function h(e={}){const{wrapper:t}={...(0,l.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},84378:(e,t,r)=>{r.d(t,{A:()=>a});const a=r.p+"assets/images/graphgetplayers-ac84b77c6ce754296175a3f100a3eb0b.png"},28453:(e,t,r)=>{r.d(t,{R:()=>i,x:()=>s});var a=r(96540);const l={},n=a.createContext(l);function i(e){const t=a.useContext(n);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:i(e.components),a.createElement(n.Provider,{value:t},e.children)}}}]);